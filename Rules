#!/usr/bin/env ruby

require 'compass'
Compass.add_project_configuration 'compass-config.rb'

preprocess do
  def create_sitemap
    # Make items that should not appear in the sitemap hidden.
    # This by default works on all image files and typical assets,
    # as well as error pages and htaccess.
    # The is_hidden attribute is only explicitly set if it is absent,
    # allowing per-file overriding.
    @items.each do |item|
      if %w{png gif jpg jpeg css scss xml js txt}.include?(item[:extension]) ||
         item.identifier =~ /404|500|htaccess/ ||
         item[:extension] =~ /(png|gif|jpg|jpeg|css|scss|xml|js|txt)$/
        item[:is_hidden] = true unless item.attributes.has_key?(:is_hidden)
      end
    end

    # Generate default sitemap
    @items << Nanoc3::Item.new(
      "<%= xml_sitemap %>",
      { :extension => 'xml' },
      '/sitemap/'
    )
  end

  def create_webmaster_tools_authentications
    @site.config[:webmaster_tools].each do |file|
      next if file[:identifier].nil?
      content    = file.delete(:content)
      identifier = file.delete(:identifier)
      file.merge({ :is_hidden => true })
      @items << Nanoc3::Item.new(
        content,
        file,
        identifier
      )
    end
  end

  def create_robots_txt
    if @site.config[:robots]
      content = if @site.config[:robots][:default]
        "User-agent: *\nDisallow: /assets\nAllow: /assets/images\nSitemap: #{@site.config[:base_url]}/sitemap.xml"
      else
        [
          'User-Agent: *',
          @site.config[:robots][:disallow].map { |l| "Disallow: #{l}" },
          @site.config[:robots][:allow].map { |l| "Allow: #{l}" },
          "Sitemap: #{@site.config[:robots][:sitemap]}"
        ].flatten.compact.join("\n")
      end
      @items << Nanoc3::Item.new(
        content,
        { :extension => 'txt', :is_hidden => true },
        '/robots/'
      )
    end
  end

  create_robots_txt
  create_webmaster_tools_authentications
  create_sitemap
end

compile '/assets/style/_*/' do
end

compile '/assets/style/*/' do
  filter :sass, Compass.sass_engine_options
end

compile '/articles/*/' do
  filter :rdiscount
  layout 'article'
end

# Don't filter or layout any google files, robots.txt, error pages or anything
# else in the assets directory.
compile %r{^/(google|robots|404|500|assets)} do
end

# Sitemap and htaccess do get filtered with erb, but get no layout.
compile %r{^/(sitemap|htaccess)/$} do
  filter :erb
end

compile '*' do
  filter :erb
  layout 'default'
end

route '/assets/style/_*/' do
  nil
end

route '/assets/style/*/' do
  item.identifier.chop + '.css'
end

route '/htaccess/' do
  '/.htaccess'
end

route %r{^/(google.*|assets/.*|sitemap|robots|atom)/$} do
  item.identifier.chop + '.' + item[:extension]
end

route '*' do
  item.identifier + 'index.html'
end

layout '*', :erb
